[{"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\App.js":"1","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\reportWebVitals.js":"2","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\login\\Login.js":"3","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\registration\\Registration.js":"4","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\index.js":"5","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\main\\Main.js":"6","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\header\\Header.js":"7","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\app-description\\Description.js":"8","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\slider\\Slider.js":"9","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\city-card\\CityCard.js":"10","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\customHooks\\useForm.js":"11","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\store.js":"12","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\api\\api.js":"13","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\services\\authService.js":"14","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\reducers\\userReducer.js":"15","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\private-route\\privateRoute.js":"16","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\reducers\\citiesReducer.js":"17","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\actions\\fetchWeather.js":"18","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\search\\Search.js":"19","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\full-weather-info\\WeatherInfo.js":"20"},{"size":1136,"mtime":1609821515970,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1609062018778,"results":"23","hashOfConfig":"22"},{"size":3831,"mtime":1609785016260,"results":"24","hashOfConfig":"22"},{"size":3827,"mtime":1609783521979,"results":"25","hashOfConfig":"22"},{"size":666,"mtime":1609782245102,"results":"26","hashOfConfig":"22"},{"size":2776,"mtime":1609824585613,"results":"27","hashOfConfig":"22"},{"size":1401,"mtime":1609825675868,"results":"28","hashOfConfig":"22"},{"size":1847,"mtime":1609825222114,"results":"29","hashOfConfig":"22"},{"size":4202,"mtime":1609824572877,"results":"30","hashOfConfig":"22"},{"size":2838,"mtime":1609824781835,"results":"31","hashOfConfig":"22"},{"size":752,"mtime":1609781309477,"results":"32","hashOfConfig":"22"},{"size":539,"mtime":1609786609559,"results":"33","hashOfConfig":"22"},{"size":1806,"mtime":1609816977198,"results":"34","hashOfConfig":"22"},{"size":1043,"mtime":1609784582417,"results":"35","hashOfConfig":"22"},{"size":418,"mtime":1609785563105,"results":"36","hashOfConfig":"22"},{"size":545,"mtime":1609785693915,"results":"37","hashOfConfig":"22"},{"size":1486,"mtime":1609822940732,"results":"38","hashOfConfig":"22"},{"size":727,"mtime":1609824262161,"results":"39","hashOfConfig":"22"},{"size":782,"mtime":1609818900817,"results":"40","hashOfConfig":"22"},{"size":3119,"mtime":1609823229911,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ltg5dp",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87"},"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\App.js",["88"],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\reportWebVitals.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\login\\Login.js",[],["89","90"],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\registration\\Registration.js",["91"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useForm from \"../customHooks/useForm\";\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUser } from '../../api/api';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperStyle: {\r\n    padding: 20,\r\n    height: \"60vh\",\r\n    width: 280,\r\n    margin: \"20px auto\",\r\n  },\r\n  avatarStyle: { backgroundColor: \"#33b679\" },\r\n  avatar__icon: { color: \"#f6bf26\" },\r\n  btnstyle: { margin: \"15px 0\" },\r\n}));\r\n\r\nconst Registration = () => {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n\r\n    const users = JSON.parse(localStorage.getItem(\"users\"));\r\n\r\n    if (!values.email.trim()) {\r\n      errors.email = \"Email required\";\r\n    } else if (\r\n      users &&\r\n      Object.values(users).find((v) => v.email === values.email)\r\n    ) {\r\n      errors.email = \"User with such email already exist\";\r\n    }\r\n\r\n    if (!values.login.trim()) {\r\n      errors.login = \"Login required\";\r\n    } else if (\r\n      users &&\r\n      Object.values(users).find((v) => v.login === values.login)\r\n    ) {\r\n      errors.login = \"User with such login already exist\";\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = \"Password required\";\r\n    } else if (values.password.length < 8) {\r\n      errors.password = \"Password need to be at least 8 characters\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const submitForm = () => {\r\n    registerUser(values);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const { handleChange, values, handleSubmit, errors } = useForm(\r\n    validate,\r\n    submitForm\r\n  );\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} className={classes.paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar className={classes.avatarStyle}>\r\n            <WbSunnyIcon className={classes.avatar__icon} />\r\n          </Avatar>\r\n          <h2>Sign Up</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            error={errors.email && true}\r\n            label=\"Email\"\r\n            placeholder=\"Enter email\"\r\n            fullWidth\r\n            required\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            helperText={errors.email}\r\n            autoComplete=\"email\"\r\n            name=\"email\"\r\n          />\r\n          <TextField\r\n            error={errors.login && true}\r\n            label=\"Login\"\r\n            placeholder=\"Enter login\"\r\n            fullWidth\r\n            required\r\n            onChange={handleChange}\r\n            value={values.login}\r\n            helperText={errors.login}\r\n            name=\"login\"\r\n            autoComplete=\"login\"\r\n          />\r\n          <TextField\r\n            error={errors.password && true}\r\n            label=\"Password\"\r\n            placeholder=\"Enter password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            required\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            helperText={errors.password}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            name=\"password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={classes.btnstyle}\r\n            fullWidth\r\n          >\r\n            Sign up\r\n          </Button>\r\n          <Typography>\r\n            {\" \"}\r\n            Already have an account? <Link to=\"/login\">Sign in</Link>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\index.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\main\\Main.js",["92","93"],"import Description from \"../app-description/Description\";\r\nimport Header from \"../header/Header\";\r\nimport Slider from \"../slider/Slider\";\r\nimport { authenticationService } from \"../../services/authService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCitiesAC } from \"../../redux/reducers/citiesReducer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  fetchWeather,\r\n  getDefaultCitiesWeather,\r\n} from \"../../redux/actions/fetchWeather\";\r\nimport { getUserDefCities } from \"../../api/api\";\r\nimport \"./styles.scss\";\r\nimport Search from \"../search/Search\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nfunction Main() {\r\n  const [city, setCity] = useState(\"\");\r\n  let history = useHistory();\r\n  const weathers = useSelector((state) => state.Cities.weathers);\r\n  const user = useSelector((state) => state.User.currentUser);\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const [isSnackVisible, setIsSnackVisible] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let defCities = getUserDefCities(user.login);\r\n    dispatch(getDefaultCitiesWeather(defCities));\r\n    dispatch(addCitiesAC(defCities.map((v) => ({ id: v, isActive: true }))));\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    authenticationService.logout();\r\n    history.replace(\"/login\");\r\n  };\r\n\r\n  const getCityWeather = (e) => {\r\n    e.preventDefault();\r\n    if (city === \"\") {\r\n      console.log(\"empty city\");\r\n    } else {\r\n      dispatch(fetchWeather(city)).then((res) => {\r\n        if (res.cod === 200) {\r\n          history.push({\r\n            pathname: `/main/${res.id}`,\r\n            state: { weather: res },\r\n          });\r\n        } else {\r\n          setSearchError(res.message);\r\n          setIsSnackVisible(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSnackVisible(false);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Header logout={logout} />\r\n      <Description />\r\n      <Search getCityWeather={getCityWeather} setCity={setCity} />\r\n      {weathers.length ? (\r\n        <Slider cities={weathers} currentCity={weathers[0]} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          No favourite cities\r\n        </Typography>\r\n      )}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={isSnackVisible}\r\n        message={searchError}\r\n        onClose={handleClose}\r\n        autoHideDuration={5000}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\header\\Header.js",["94"],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\app-description\\Description.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\slider\\Slider.js",["95"],"import { Container, Typography, Grid } from \"@material-ui/core\";\r\nimport City from \"../city-card/CityCard\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./styles.scss\";\r\nimport { addCityToFav, removeCityFromFav } from '../../api/api';\r\nimport { removeFromFavAC, addToFavAC } from \"../../redux/reducers/citiesReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Slider(props) {\r\n  const [currentCity, setCurrentCity] = useState(props.currentCity);\r\n  const [offset, setOffset] = useState(3);\r\n  let history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handlePageResize();\r\n    window.addEventListener(\"resize\", handlePageResize);\r\n    return (_) => {\r\n      window.removeEventListener(\"resize\", handlePageResize);\r\n    };\r\n  }, []);\r\n\r\n  const handlePageResize = () => {\r\n    let sliderWidth = getSliderWidth();\r\n    setOffset(calcOffset(sliderWidth));\r\n  };\r\n\r\n  const calcOffset = (sliderWidth) => {\r\n    if (sliderWidth >= 750) {\r\n      return 3;\r\n    } else if (sliderWidth >= 510) {\r\n      return 2;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  const getCurrentCityIndex = (city) => {\r\n    return props.cities.findIndex((v) => v.id === city.id);\r\n  };\r\n\r\n  const getSliderWidth = () => {\r\n    return document.getElementById(\"slider__wrapper\").offsetWidth;\r\n  };\r\n\r\n  const nextProperty = () => {\r\n    let sliderWidth = getSliderWidth();\r\n    setOffset(calcOffset(sliderWidth));\r\n    let newIndex = getCurrentCityIndex(currentCity) + offset;\r\n    setCurrentCity(\r\n      props.cities[\r\n        newIndex < props.cities.length - 1 ? newIndex : props.cities.length - 1\r\n      ]\r\n    );\r\n  };\r\n\r\n  const prevProperty = () => {\r\n    let sliderWidth = getSliderWidth();\r\n    setOffset(calcOffset(sliderWidth));\r\n    let newIndex = getCurrentCityIndex(currentCity) - offset;\r\n    setCurrentCity(props.cities[newIndex < 0 ? 0 : newIndex]);\r\n  };\r\n\r\n  const onAddToFavourites = (data) => {\r\n    addCityToFav(data.id);\r\n    dispatch(addToFavAC(data.id));\r\n  };\r\n\r\n  const onRemoveFromFavourites = (data) => {\r\n    removeCityFromFav(data.id);\r\n    dispatch(removeFromFavAC(data.id));\r\n  };\r\n\r\n  const onCitySelect = (data) => {\r\n    history.push({\r\n      pathname: `/main/${data.id}`,\r\n      state: { weather: data },\r\n    });\r\n  };\r\n\r\n  let CityItems = props.cities.map((b) => (\r\n    <City\r\n      onAddToFav={onAddToFavourites}\r\n      onRemoveFav={onRemoveFromFavourites}\r\n      customClickEvent={onCitySelect}\r\n      key={b.id}\r\n      city={b}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Container className=\"main__container\" maxWidth=\"md\">\r\n      <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n        Favourite cities\r\n      </Typography>\r\n      <Grid container spacing={3} wrap=\"nowrap\">\r\n        <Grid item xs className=\"arrow__wrapper\">\r\n          <div\r\n            style={{\r\n              display: `${\r\n                getCurrentCityIndex(currentCity) === 0 ? \"none\" : \"block\"\r\n              }`,\r\n            }}\r\n            onClick={() => prevProperty()}\r\n            className=\"arrows prev\"\r\n          ></div>\r\n        </Grid>\r\n        <Grid item className=\"slider__wrapper\" id=\"slider__wrapper\">\r\n          <div className=\"slider\">\r\n            <div className=\"slider__cards\">\r\n              <div\r\n                className=\"cards__wrapper\"\r\n                style={{\r\n                  transform: `translateX(-${\r\n                    getCurrentCityIndex(currentCity) *\r\n                    (100 / props.cities.length)\r\n                  }%)`,\r\n                }}\r\n              >\r\n                {CityItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs className=\"arrow__wrapper\">\r\n          <div\r\n            style={{\r\n              display: `${\r\n                props.cities.length - getCurrentCityIndex(currentCity) <= offset\r\n                  ? \"none\"\r\n                  : \"block\"\r\n              }`,\r\n            }}\r\n            onClick={() => nextProperty()}\r\n            className=\"arrows next\"\r\n          ></div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\city-card\\CityCard.js",["96"],"import React from \"react\";\r\nimport sun from \"../../assets/icons/sun.svg\";\r\nimport snow from \"../../assets/icons/snow.svg\";\r\nimport rain from \"../../assets/icons/rain.svg\";\r\nimport windy from \"../../assets/icons/windy.svg\";\r\nimport moscow from \"../../assets/moscow.jpg\";\r\nimport paris from \"../../assets/paris.jpg\";\r\nimport beijing from \"../../assets/beijing.jpg\";\r\nimport london from \"../../assets/london.jpg\";\r\nimport newyork from \"../../assets/newyork.jpg\";\r\nimport dftImg from \"../../assets/default.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as faHeartActive } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./styles.scss\";\r\n\r\nfunction City(props) {\r\n  const defCities = useSelector((state) => state.Cities.cities);\r\n\r\n  const getImg = () => {\r\n    let day = props.city.weather[0].main;\r\n    switch (day) {\r\n      case \"Rain\":\r\n        return rain;\r\n      case \"Snow\":\r\n        return snow;\r\n      case \"Wind\":\r\n        return windy;\r\n      case \"Clouds\":\r\n        return windy;\r\n      default:\r\n        return sun;\r\n    }\r\n  };\r\n\r\n  const getCityImg = () => {\r\n    let city = props.city.name;\r\n    switch (city) {\r\n      case \"Moscow\":\r\n        return moscow;\r\n      case \"Beijing\":\r\n        return beijing;\r\n      case \"New York\":\r\n        return newyork;\r\n      case \"Paris\":\r\n        return paris;\r\n      case \"London\":\r\n        return london;\r\n      default:\r\n        return dftImg;\r\n    }\r\n  };\r\n\r\n  const isActive = (id) => {\r\n    const city = defCities.find((v) => v.id === id);\r\n    return city ? city.isActive : false;\r\n  };\r\n\r\n  return (\r\n    <section className=\"card\">\r\n      <div onClick={() => props.customClickEvent(props.city)}>\r\n        <div className=\"floater\">\r\n          <div className=\"iconTemp\">\r\n            <img src={getImg()} alt=\"Sun\" id=\"weather-icon\" />\r\n            <p className=\"temp\">{Math.ceil(props.city.main.temp)}&#176;</p>\r\n          </div>\r\n          <p>{props.city.weather[0].main}</p>\r\n        </div>\r\n        <img src={getCityImg()} alt=\"Moscow\" id=\"cityImg\" />\r\n      </div>\r\n      <div className=\"card__footer\">\r\n        {isActive(props.city.id) ? (\r\n          <FontAwesomeIcon\r\n            onClick={() => props.onRemoveFav(props.city)}\r\n            className=\"footer__icon active\"\r\n            icon={faHeartActive}\r\n          />\r\n        ) : (\r\n          <FontAwesomeIcon\r\n            onClick={() => props.onAddToFav(props.city)}\r\n            className=\"footer__icon\"\r\n            icon={faHeart}\r\n          />\r\n        )}\r\n        <div className=\"footer__name\">\r\n          <p>{props.city.name}</p>\r\n          <p>{props.city.sys.country}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default City;\r\n","E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\customHooks\\useForm.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\store.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\api\\api.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\services\\authService.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\reducers\\userReducer.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\private-route\\privateRoute.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\reducers\\citiesReducer.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\redux\\actions\\fetchWeather.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\search\\Search.js",[],"E:\\Рабочий стол\\test tasks\\weather v2\\weather-app-v2\\src\\components\\full-weather-info\\WeatherInfo.js",["97"],"import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as faHeartActive } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  removeFromFavAC,\r\n  addCityAC,\r\n  addToFavAC,\r\n} from \"../../redux/reducers/citiesReducer\";\r\nimport { addCityToFav, removeCityFromFav } from \"../../api/api\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction WeatherInfo(props) {\r\n  const defCities = useSelector((state) => state.Cities.cities);\r\n  const weather = props.location.state.weather;\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = (id) => {\r\n    const city = defCities.find((v) => v.id === id);\r\n    return city ? city.isActive : false;\r\n  };\r\n\r\n  const onAddToFavourites = (data) => {\r\n    addCityToFav(data.id);\r\n    if (!defCities.find((v) => v.id === data.id)) {\r\n      dispatch(addCityAC(data.id));\r\n    } else {\r\n      dispatch(addToFavAC(data.id));\r\n    }\r\n  };\r\n\r\n  const onRemoveFromFavourites = (data) => {\r\n    removeCityFromFav(data.id);\r\n    dispatch(removeFromFavAC(data.id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Weather\">\r\n      <div className=\"cityTitle\">\r\n        <h2 className=\"city__name\">{weather.name}</h2>\r\n        <div className=\"title__icon\">\r\n          {isActive(weather.id) ? (\r\n            <FontAwesomeIcon\r\n              onClick={() => onRemoveFromFavourites(weather)}\r\n              className=\"footer__icon active\"\r\n              icon={faHeartActive}\r\n            />\r\n          ) : (\r\n            <FontAwesomeIcon\r\n              onClick={() => onAddToFavourites(weather)}\r\n              className=\"footer__icon\"\r\n              icon={faHeart}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"weatherCard\">\r\n        <section className=\"sky\">\r\n          <div className=\"cloud1\"></div>\r\n          <div className=\"cloud2\"></div>\r\n          <div className=\"cloud3\"></div>\r\n          <div className=\"sun\"></div>\r\n        </section>\r\n        <section className=\"content\">\r\n          <h1 className=\"content__temp\">\r\n            {Math.ceil(weather.main.temp)}&#176;\r\n          </h1>\r\n          <h3 className=\"content__min\">{weather.weather[0].main}</h3>\r\n          <div className=\"details\">\r\n            <div>\r\n              <p className=\"value\">{Math.ceil(weather.main.temp_min)}&#176;</p>\r\n              <p className=\"label\">Minimum</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"value\">{Math.ceil(weather.main.temp_max)}&#176;</p>\r\n              <p className=\"label\">Maximum</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"value\">{Math.ceil(weather.wind.speed)}m/s</p>\r\n              <p className=\"label\">Wind</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"value\">{Math.ceil(weather.main.humidity)}%</p>\r\n              <p className=\"label\">Humidity</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherInfo;\r\n",{"ruleId":"98","severity":1,"message":"99","line":20,"column":6,"nodeType":"100","endLine":20,"endColumn":8,"suggestions":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":121,"column":13,"nodeType":"108","endLine":121,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":17,"column":22,"nodeType":"111","messageId":"112","endLine":17,"endColumn":26},{"ruleId":"98","severity":1,"message":"113","line":33,"column":6,"nodeType":"100","endLine":33,"endColumn":8,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":1,"column":50,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"98","severity":1,"message":"116","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":28,"fix":"122"},{"ruleId":"118","severity":1,"message":"119","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":28,"fix":"123"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'user.login'. Either include them or remove the dependency array.",["127"],"'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'handlePageResize'. Either include it or remove the dependency array.",["128"],"no-useless-rename","Import faHeart unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"129","text":"130"},{"range":"131","text":"130"},{"desc":"132","fix":"133"},"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},[664,682],"faHeart",[208,226],"Update the dependencies array to be: [dispatch]",{"range":"138","text":"139"},"Update the dependencies array to be: [dispatch, user.login]",{"range":"140","text":"141"},"Update the dependencies array to be: [handlePageResize]",{"range":"142","text":"143"},[741,743],"[dispatch]",[1344,1346],"[dispatch, user.login]",[841,843],"[handlePageResize]"]